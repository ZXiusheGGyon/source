<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idp.web.ware.dao.PdGoodsLogisticsDao">

	<parameterMap id="parameterMap" type="com.idp.web.ware.entity.PdGoodsLogistics"></parameterMap>
	<resultMap id="resultMap" type="com.idp.web.ware.entity.PdGoodsLogistics">
		<result property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="nodeLevel" column="node_level"/>
		<result property="otherMsg" column="other_msg"/>
		<result property="goodsId" column="goods_id"/>
		<result property="createDate" column="create_date"/>
		<result property="goodsCode" column="goods_code"/>
		<result property="orderNumber" column="order_number"/>
		<result property="orderType" column="order_type"/>
		<result property="companyInformationId" column="company_information_id"/>
		<result property="head" column="head"/>
		<result property="goodsCodesPath" column="goods_codes_path"/>
	</resultMap>
	
	<sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.user_id,
			t.node_level,
			t.other_msg,
			t.goods_id,
			t.create_date,
			t.goods_code,
			t.order_number,
			t.order_type,
			t.company_information_id,
			t.head,
			t.goods_codes_path,
	 	</trim>
	</sql>
	
	<select id="find" parameterMap="parameterMap" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from pd_goods_logistics t
		<where>
			<if test="goodsId != null and goodsId != ''">
				and t.goods_id like concat('%',#{goodsId},'%')
			</if>
			<if test="goodsCode != null and goodsCode != ''">
				and t.goods_code like concat('%',#{goodsCode},'%')
			</if>
		</where>
	</select>
	
	<select id="getById" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from pd_goods_logistics t
		where t.id = #{value}
	</select>
	
	<insert id="add" parameterMap="parameterMap">
		insert into pd_goods_logistics
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			user_id,
			node_level,
			other_msg,
			goods_id,
			create_date,
			goods_code,
			order_number,
			order_type,
			company_information_id,
			head,
			goods_codes_path,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{userId},
			#{nodeLevel},
			#{otherMsg},
			#{goodsId},
			#{createDate},
			#{goodsCode},
			#{orderNumber},
			#{orderType},
			#{companyInformationId},
			#{head},
			#{goodsCodesPath},
		</trim>
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		insert into pd_goods_logistics
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			user_id,
			node_level,
			other_msg,
			goods_id,
			create_date,
			goods_code,
			order_number,
			order_type,
			company_information_id,
			head,
			goods_codes_path,
		</trim>
		values
		<foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.id},
				#{item.userId},
				#{item.nodeLevel},
				#{item.otherMsg},
				#{item.goodsId},
				#{item.createDate},
				#{item.goodsCode},
				#{item.orderNumber},
				#{item.orderType},
				#{item.companyInformationId},
				#{item.head},
				#{item.goodsCodesPath},
			</trim>
		</foreach>
	</insert>
	
	<update id="update" parameterMap="parameterMap">
		update pd_goods_logistics
		<set>
			user_id = #{userId},
			node_level = #{nodeLevel},
			other_msg = #{otherMsg},
			goods_id = #{goodsId},
			create_date = #{createDate},
			goods_code = #{goodsCode},
			order_number = #{orderNumber},
			order_type = #{orderType},
			company_information_id = #{companyInformationId},
			head = #{head},
			goods_codes_path = #{goodsCodesPath},
		</set>
		where id = #{id}
	</update>
	
	<update id="updateNotNull" parameterMap="parameterMap">
		update pd_goods_logistics
		<set>
			<if test="userId != null">
			user_id = #{userId},
			</if>
			<if test="nodeLevel != null">
			node_level = #{nodeLevel},
			</if>
			<if test="otherMsg != null">
			other_msg = #{otherMsg},
			</if>
			<if test="goodsId != null">
			goods_id = #{goodsId},
			</if>
			<if test="createDate != null">
			create_date = #{createDate},
			</if>
			<if test="goodsCode != null">
			goods_code = #{goodsCode},
			</if>
			<if test="orderNumber != null">
			order_number = #{orderNumber},
			</if>
			<if test="orderType != null">
			order_type = #{orderType},
			</if>
			<if test="companyInformationId != null">
			company_information_id = #{companyInformationId},
			</if>
			<if test="head != null">
			head = #{head},
			</if>
			<if test="goodsCodesPath != null">
			goods_codes_path = #{goodsCodesPath},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		delete from pd_goods_logistics where id = #{value}
	</delete>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from pd_goods_logistics where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
</mapper>